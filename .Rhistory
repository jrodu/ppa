geom_line() + facet_wrap(~session, scales="free")
comb_lr %>% filter(value<1000) %>% ggplot(aes(timestamp, value)) +
geom_line() + facet_wrap(~session, scales="free")
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
a <- 1:5
typeof(a)
type.convert(a, "character")
type.convert(a, "character", as.is = TRUE)
b <- type.convert(a, "character", as.is = TRUE)
b
typeof(b)
type.covert(a)
type.convert(a)
class(a)
typeof(a)
typeof(a) <- "character"
class(a) <- "character"
a
class(a) <- "integer"
a
df
class(df)
class(df$x)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
labels
devtools::load_all()
devtools::load_all()
rlang::last_error()
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
setwd("C:/Users/jsr6q/Dropbox/Code/stickerplot/regattempt_use")
library(shiny)
library(shinyalert)
ui <- fluidPage(
actionButton("preview", "Preview")
)
server <- function(input, output, session) {
observeEvent(input$preview, {
# Show a modal when the button is pressed
shinyalert(
title = "Test",
html = TRUE,
text = c(
"Line1",
"Line2"
)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
observeEvent(input$preview, {
# Show a modal when the button is pressed
shinyalert(
title = "Test",
html = TRUE,
text = c(
"Line1"
)
)
})
}
shinyApp(ui, server)
server <- function(input, output, session) {
observeEvent(input$preview, {
# Show a modal when the button is pressed
shinyalert(
title = "Test",
html = TRUE,
text = c(
"Line1",
"Line2"
)
)
})
}
shinyApp(ui, server)
install.packages('shinyalert')
install.packages("shinyalert")
library(shiny)
library(shinyalert)
ui <- fluidPage(
actionButton("preview", "Preview")
)
server <- function(input, output, session) {
observeEvent(input$preview, {
# Show a modal when the button is pressed
shinyalert(
title = "Test",
html = TRUE,
text = c(
"Line1",
"Line2"
)
)
})
}
shinyApp(ui, server)
install.packages("remotes")
remotes::install_github("daattali/shinyalert")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("daattali/shinyalert")
sessionInfo()
library(shinyalert)
sessionInfo()
library(shiny)
library(shinyalert)
ui <- fluidPage(
actionButton("preview", "Preview")
)
server <- function(input, output, session) {
observeEvent(input$preview, {
# Show a modal when the button is pressed
shinyalert(
title = "Test",
html = TRUE,
text = c(
"Line1",
"Line2"
)
)
})
}
shinyApp(ui, server)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
sessionInfo()
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
library(tidyverse)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
missing()
missing
getAnywhere(missing)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
library(tidyverse)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
rlang::last_warnings()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
library(tidyverse)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
library(tidyverse)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
foo <- quote(foo)
bar <- sym("bar")
# as_name() converts symbols to strings:
foo
as_name(foo)
foo
bar
rlang::as_name(foo)
rlang::as_name(bar)
!!foo
quo(foo)
rlang::as_name(quo(foo))
library(tidyverse)
set.seed(140)
tsa <- 1:50
tsb <- c(rep(1, 25), rep(50, 25))
tsc <- c(seq(50 ,41, length.out=20), seq(40, 11, length.out=10), seq(10,1, length.out=20))
data <- tibble(seconds = rep(1:50, times=102),
haty=c(rep(tsa, times=25),
rep(tsb, times=25),
rep(tsc, times=25), rnorm(1250, 25, 15),
tsa, rep(25, 50)), #these are the "bad" time series
series=c(rep(sample(3:102), each=50), rep(c(1,2), each=50)),
identity=c(rep(c('a', 'b', 'c', 'd'), each=1250), rep('a', 50), rep('d', 50)),
noise=c(rnorm(5000, sd=15), rep(0, 100)),
y=haty+noise) %>% arrange(series)
data %>% ggplot(aes(seconds, y))+geom_line(aes(group=series)) +
xlab(NULL) +
ylab(NULL) +
theme(axis.text.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
panel.border = element_blank(), panel.background = element_rect(fill="white"),
panel.grid = element_line(colour = "grey70"))
data %>% ggplot(aes(seconds, y))+geom_line(aes(group=series)) + facet_wrap(~identity) +
xlab(NULL) +
ylab(NULL) +
theme(axis.text.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
panel.border = element_blank(), panel.background = element_rect(fill="white"),
panel.grid = element_line(colour = "grey70"))
data_idens <- data %>% select(series, identity) %>% unique()
data_idens$identity_16 <- map_chr(data_idens$identity, function(x) sample(c(x, 'a', 'b', 'c', 'd'), 1,
prob=c(.4, .15, .15, .15, .15)))
data_idens$identity_16[1:2] <- c('a','d')
data_idens$identity_random <- map_chr(data_idens$identity, function(x) sample(c('a', 'b', 'c', 'd'), 1,
prob=c(.25, .25, .25, .25)))
data_idens$identity_random[1:2] <- c('a','d')
aug_data <- data %>% left_join(data_idens, by=c("series", "identity"))
aug_data %>% ggplot(aes(seconds, y))+geom_line(aes(group=series)) + facet_wrap(~identity_16) +
xlab(NULL) +
ylab(NULL) +
theme(axis.text.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
panel.border = element_blank(), panel.background = element_rect(fill="white"),
panel.grid = element_line(colour = "grey70"))
aug_data
aug_data %>% ggplot(aes(seconds, y))+geom_line(aes(group=series)) + facet_wrap(~identity_random) +
xlab(NULL) +
ylab(NULL) +
theme(axis.text.x = element_blank(), axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
panel.border = element_blank(), panel.background = element_rect(fill="white"),
panel.grid = element_line(colour = "grey70"))
aug_data
aug_data %>% select(sample, series, identity, y, identity_16, identity_random)
aug_data %>% select(seconds, series, identity, y, identity_16, identity_random)
example_data <- aug_data %>% select(seconds, series, identity, y, identity_16, identity_random)
example_data
usethis::use_data(example_data)
devtools::load_all()
df
example_data
example_data %>% stickerApp(seconds, y, series, "line")
example_data %>% ppa(seconds, y, series, "line")
df %>% ppa(x, y, z, 'line')
df %>% ppa(x, yprime, z, 'line')
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, yprime, z, 'line')
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(y, yprime, z, 'scatter', rowgroup=rows, colgroup=cols)
devtools::load_all()
example_data
df
library(tidyverse)
d
df
devtools::load_all()
df
example_data
devtools::load_all()
library(tidyverse)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df
devtools::load_all()
df
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line') #temporary
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df
example_data_no_row_col <- df
usethis::use_data(example_data_no_row_col)
example_data
example_data_from_paper
example_data_from_paper <- example_data
usethis::use_data(example_data_from_paper)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(1:40, each=500), cols=rep(rep(1:10, each=50), 40))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = rep(1:400, 50), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
example_data_from_paper
example_data_no_row_col
example_data_no_row_col <- tibble::as_tibble(example_data_no_row_col)
usethis::use_data(example_data_no_row_col)
usethis::use_data(example_data_no_row_col, overwrite=TRUE)
devtools::load_all()
rm(list=ls())
devtools::load_all()
example_data_no_row_col
example_data_from_paper
usethis::use_vignette("ppa-basic-usage")
devtools::load_all()
example_data_no_row_col
library(tidyverse)
df <- data.frame(x = rep(1:50, each=400), y = runif(20000), yprime = runif(20000), z=rep(1:400, 50),
rows=rep(rep(1:40, each=10), 50), cols=rep(1:10, times=2000))
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
example_data_with_row_col <- df
usethis::use_data(example_data_with_row_col)
devtools::load_all()
df %>% ppa(x, y, z, 'line') #temporary
df %>% slice(1)
df %>% slice(1) %>% pull(cols)
df %>% slice(1) %>% pull(cols) %>% pull(cols)
df %>% slice(1) %>% pull(cols) %>% pull()
check()
devtools::check()
usethis::use_mit_license()
devtools::document()
devtools::document()
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::load_all()
df %>% ppa(x, y, z, 'line', rowgroup=rows, colgroup=cols)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
example_data_no_row_col %>% ppa(x, y, z, 'line')
devtools::check()
devtools::check()
usethis::use_r("data")
names(example_data_from_paper)
example_data_from_paper %>% n()
library(tidyverse)
example_data_from_paper %>% n()
n(example_data_from_paper)
example_data_from_paper
example_data_no_row_col
example_data_with_row_col
devtools::document()
devtools::check()
devtools::document()
devtools::check()
usethis::use_package("jsonlite")
usethis::use_package("purrr")
usethis::use_package("tidyr")
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::load_all()
example_data_no_row_col %>% ppa(x, y, z, 'line')
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
example_data_no_row_col %>% ppa(x, y, z, 'line')
devtools::check()
usethis::use_package("stats")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
usethis::use_package("tidyselect")
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::load_all()
example_data_no_row_col %>% ppa(x, y, z, 'line')
devtools::load_all()
devtools::load_all()
rlang::last_error()
rlang::last_error()
devtools::load_all()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
